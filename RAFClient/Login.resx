<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A//8AAP//+AD////A///////
</value>
  </data>
</root>